"""
Представления хранятся по пути: mysitedjango/woman/views.py
Представления можно реализовать в виде функций или в виде классов

Функция представления в самом простом варианте:

def index(request):
    request - это ссылка на спецкласс, содержащий информацию о запросе: о сессиях, куках и т.д.
    Т.е. через request будет доступна вся информация о текущем запросе
    return HttpResponse("Страница приложения women")  # класс HttpResponse автоматически формирует
    # нужный заголовок ответа

Теперь нужно связать функцию index с соответствующим URL-адресом.
Для этого открываем файл mysitedjango/mysitedjango/urls.py, в котором описываются различные маршруты.
Там по умолчанию есть маршрут доступа к админ-панели

urlpatterns = [
    path('admin/', admin.site.urls),
    path('woman/', index)
]

Параметр woman/ определяет суффикс URL-адреса, т.е. это часть URL, которая добавляется после доменного имени

ВАЖНО! Каталог mysitedjango был сделан Source Root, т.е. корневым, тогда в urls.py импорт будет выглядеть так:
from woman.views import index и не будет ошибок при запуске сервера

Далее запускаем сервер
python manage.py runserver
находясь в \SelfEDU_Django4\mysitedjango>

Теперь можем перейти по адресу:
http://127.0.0.1:8000/woman/
и получим:
Страница приложения women

Добавим аналогично представление cat (категории)

Путь до главной страницы прописывается так:
path('', views.index),  # http://127.0.0.1:8000/

В случае, если нужно будет перенести приложение women на другой сайт, то все адреса (path) нужно будет переносить
вручную. Для облегчения django позволяет вместо функции представления воспользоваться функцией include для включения
всех адресов. А саму коллекцию urlpatterns перенести в папку с приложением (woman)

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('woman.urls')),  # http://127.0.0.1:8000/
]

При необходимости можно в строке path('', include('woman.urls')) прописать доп адрес, который будет добавлен перед
остальными url: path('app', include('woman.urls'))
"""
